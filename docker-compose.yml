version: '3'

networks:
  monitor-net:
    driver: bridge
  loki:

volumes:
    prometheus_data: {}
    grafana_data: {}
    alertmanager_data: { }
    loki_data: {}
    promtail_data: {}

services:
  prometheus:
    image: prom/prometheus:v2.25.0
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus/data/'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=365d'
      - '--web.external-url=${PROMETHEUS_URL:-http://localhost:9090}'
      - '--web.enable-admin-api'
    restart: unless-stopped
    expose:
      - 9090
    ports:
      - ${PROMETHEUS_PORT:-9090}:9090
    networks:
      - monitor-net
    labels:
      group: "monitoring"
      host.name: "${HOST_NAME}"

  grafana:
    image: grafana/grafana:7.4.3
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER
      - GF_SECURITY_ADMIN_PASSWORD
      - GF_DEFAULT_INSTANCE_NAME=${HOST_NAME}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ENABLE_GZIP=true
      - GF_SERVER_ROOT_URL
    restart: unless-stopped
    ports:
      - ${GRAFANA_PORT:-3000}:3000
    networks:
      - monitor-net
      - loki
    labels:
      group: "monitoring"
      host.name: "${HOST_NAME}"

  alertmanager:
    image: prom/alertmanager:v0.21.0
    container_name: alertmanager
    volumes:
      - alertmanager_data:/alertmanager
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=${ALERTMANAGER_EXTERNAL_URL:-http://localhost:9093/}'
    restart: unless-stopped
    expose:
      - 9093
    ports:
      - ${ALERTMANAGER_PORT:-9093}:9093
    networks:
      - monitor-net
      - loki
    labels:
      group: "monitoring"
      host.name: "${HOST_NAME}"

  loki:
    image: grafana/loki:2.1.0
    container_name: loki
    volumes:
      - ./loki/loki.yml:/etc/loki/loki.yml
      - ./loki/alerts:/etc/loki/alerts
      - loki_data:/loki
    ports:
      - ${LOKI_PORT:-3100}:3100
    command:
      - '-config.file=/etc/loki/loki.yml'
      - '-config.expand-env=true'
    restart: unless-stopped
    networks:
      - loki
    labels:
      group: "monitoring"
      host.name: "${HOST_NAME}"

  nodeexporter:
    image: prom/node-exporter:v1.1.1
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      - '--no-collector.rapl'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - monitor-net
    labels:
      group: "monitoring"
      host.name: "${HOST_NAME}"

  promtail:
    image: grafana/promtail:2.1.0
    container_name: promtail
    environment:
      - HOST_NAME=${HOST_NAME}
      - LOKI_EXTERNAL_URL
    volumes:
      - ./promtail/promtail.yml:/etc/promtail/promtail.yml
      - promtail_data:/promtail/
      - /var/log:/var/log:ro
    command:
      - '-config.file=/etc/promtail/promtail.yml'
      - '-config.expand-env=true'
    restart: unless-stopped
    networks:
      - loki
    labels:
      group: "monitoring"
      host.name: "${HOST_NAME}"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /sys/fs/cgroup:/cgroup:ro
      - /dev/disk/:/dev/disk:ro
    command:
      - '-housekeeping_interval=10s'
      - '-docker_only=true'
    restart: unless-stopped
    devices:
      - /dev/kmsg:/dev/kmsg
    security_opt:
      - no-new-privileges:true
    expose:
      - 8080
    networks:
      - monitor-net
    labels:
      group: "monitoring"
      host.name: "${HOST_NAME}"

  blackboxexporter:
    image: prom/blackbox-exporter
    container_name: blackboxexporter
    restart: unless-stopped
    expose:
      - 9115
    networks:
      - monitor-net
    volumes:
      - ./blackbox/config:/config
    command: '--config.file=/config/blackbox.yml'
    labels:
      group: "monitoring"
      host.name: "${HOST_NAME}"

  nginxexporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginxexporter
    command:
      - '-nginx.scrape-uri=${NGINX_SCRAPE_URI:-http://localhost:8087/nginx_status}'
      - '-prometheus.const-labels=host=${HOST_NAME}'
    restart: unless-stopped
    expose:
      - 9113
    networks:
      - monitor-net
    extra_hosts:
      - "host.docker.internal:${DOCKER_HOST_INTERNAL_IP}"
    labels:
      group: "monitoring"
      host.name: "${HOST_NAME}"
